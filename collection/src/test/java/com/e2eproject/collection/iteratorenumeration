Iterator	Enumeration
hasNext()	hasMoreElements()
next()		nextElement()
remove()	(Not Available)

Enumeration and Iterator are two interfaces in java.util package which are used to 
traverse over the elements of a Collection object. Though they perform the same 
function i.e traversing the Collection object, there are some differences exist
 between them. Using Enumeration, you can only traverse the Collection object.
  But using Iterator, you can also remove an element while traversing the Collection. 
  This is the one major difference between Enumeration and Iterator in java. 
  
  *****************************************************************************
  How can we sort the elements of an object? What is the difference between Comparable and Comparator interfaces?
  Comparable	Comparator
1) Comparable provides a single sorting sequence. 
In other words, we can sort the collection on the basis of a single element such as id,
 name, and price.	
 The Comparator provides multiple sorting sequences. In other words,
  we can sort the collection on the basis of multiple elements such as id, name, and price etc.
2) Comparable affects the original class, i.e., the actual class is modified.	Comparator 
doesn't affect the original class, i.e., the actual class is not modified.
3) Comparable provides compareTo() method to sort elements.
	Comparator provides compare() method to sort elements.
4) Comparable is present in java.lang package.	
A Comparator is present in the java.util package.
5) We can sort the list elements of Comparable type by Collections.sort(List) method.	We can sort the list elements of Comparator type by Collections.sort(List, Comparator) method.